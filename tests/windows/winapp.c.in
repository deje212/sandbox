/*
   Gabarito de Programa em C para Windows.
 */
#include <windows.h>

HWND mainWindowHandle;

LRESULT CALLBACK WindowMessageHandler(HWND, UINT, WPARAM, LPARAM);

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
                   LPSTR lpszCmdLine, int nCmdShow)
{
  MSG msg;
  static const char *className = "MyWinAppClass32";
  WNDCLASS wc = {};

/* __SINGLE_INSTANCE__ deve ser definido no ato da compilação, se quisermos apenas
   uma instância da aplicação em execução. */
#ifdef __SINGLE_INSTANCE__
  /* Mude o nome de acordo com sua aplicação. Veja o Makefile. */ 
  #define MUTEX_NAME "@uniqueid@"

  CreateMutex(NULL, TRUE, MUTEX_NAME);

  /* Se o mutex nomeado já existe, sai da aplicação. */
  if (GetLastError() != NO_ERROR)
    return 0;
#endif

  wc.style = CS_HREDRAW | CS_VREDRAW | CS_DBLCLKS;
  wc.lpfnWndProc = WindowMessageHandler;
  wc.hInstance = hInstance;
  wc.hIcon = LoadIcon(hInstance, "WINAPP_ICON");
  wc.hCursor = LoadCursor(NULL, IDC_ARROW);
  wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
  wc.lpszClassName = className;

  RegisterClass(&wc);

  if ((mainWindowHandle = CreateWindow(
                className,
                "My Win32 App",
                WS_OVERLAPPEDWINDOW,
                CW_USEDEFAULT, CW_USEDEFAULT,
                640, 480,
                NULL,
                NULL,
                hInstance,
                NULL
              )) == NULL)
  {
    MessageBox(NULL, "Error creating window!", "Error", MB_OK | MB_ICONERROR);
    return 0;
  }

  UpdateWindow(mainWindowHandle);
  ShowWindow(mainWindowHandle, nCmdShow);

  while (GetMessage(&msg, NULL, 0, 0))
  {
    TranslateMessage(&msg);
    DispatchMessage(&msg);
  }

  return msg.wParam;
}

LRESULT CALLBACK WindowMessageHandler(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
  switch (uMsg)
  {
    case WM_DESTROY:
      PostQuitMessage(0);
      break;

    default:
      return DefWindowProc(hWnd, uMsg, wParam, lParam);
  }

  return 0;
}


